{"version":3,"sources":["input.js"],"names":["upperChild","document","querySelector","oLine","downChild","emojiBtn","getElementById","imageBtn","fileBtn","editFullScreen","exitFullScreen","emojiMart","toolMusk","sendBtn","chatInput","pickerOptions","locale","onEmojiSelect","e","style","display","insertAtCursor","native","picker","EmojiMart","Picker","myField","myValue","editor","html","focus","window","getSelection","selection","getRangeAt","rangeCount","range","deleteContents","node","lastNode","element","createElement","innerHTML","fragment","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","collapse","removeAllRanges","addRange","type","createRange","pasteHTML","addImage","file","Promise","resolve","reject","reader","FileReader","onload","src","target","result","img","Image","imgStr","outerHTML","readAsDataURL","inputFile","settings","console","log","undefined","maxImageSize","maxImageNumber","enable","onclick","imageInput","accept","multiple","onchange","imgNum","getElementsByTagName","length","i","this","files","size","sendFile","click","sendFileFunc","fileInput","enableDrop","ondrop","preventDefault","stopPropagation","border","dataTransfer","indexOf","ondragover","ondragleave","onPaste","event","clipboardData","getData","text","execCommand","onmousedown","ev","backgroundColor","dy","clientY","upperHeight","offsetHeight","downHeight","onmousemove","diff","height","concat","onmouseup","emojiHeight","clientHeight","bottom","top","addEventListener"],"mappings":"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","file":"../litewebchat_input.min.js","sourcesContent":["// !参考资料来源：\n// !https://blog.csdn.net/weixin_40629244/article/details/104642683\n// !https://github.com/jrainlau/chat-input-box\n// !https://www.zhihu.com/question/20893119/answer/19452676\n// !致谢：感谢@jrainlau提供的思路和代码，我在他的富文本编辑器基础上进行了修改，使其能够在聊天输入框中使用\n// ————YubaC 2023.1.23\n\n// --------------------------------\n// 上半部分的聊天区域\nlet upperChild = document.querySelector('.lite-chatbox');\n// 分界线\nlet oLine = document.querySelector('.lite-chatinput hr');\n// 下半部分的输入框区域\nlet downChild = document.querySelector('.lite-chatinput');\n\n// 以下为输入框区域的按钮\nvar emojiBtn = document.getElementById(\"emojiBtn\"); // 表情按钮\nvar imageBtn = document.getElementById(\"imageBtn\"); // 图片按钮\nvar fileBtn = document.getElementById(\"fileBtn\"); // 文件按钮\nvar editFullScreen = document.getElementById(\"editFullScreen\"); // 全屏按钮\nvar exitFullScreen = document.getElementById(\"exitFullScreen\"); // 退出全屏按钮\nvar emojiMart = document.getElementById(\"emojiMart\"); // 表情面板\nvar toolMusk = document.getElementById(\"toolMusk\"); // 表情面板遮罩\nvar sendBtn = document.getElementById(\"sendBtn\"); // 发送按钮\nvar chatInput = document.querySelector('.lite-chatinput>.chatinput'); // 输入框\n// --------------------------------\n\n// Emoji Mart（表情面板）设置及唤起\nvar pickerOptions = {\n    \"locale\": \"zh\",\n    onEmojiSelect: function(e) {\n        // console.log(e.native);\n        emojiMart.style.display = \"none\";\n        toolMusk.style.display = \"none\";\n        insertAtCursor(chatInput, e.native);\n        // insertEmoji(e.native);\n    }\n}\nvar picker = new EmojiMart.Picker(pickerOptions);\nemojiMart.appendChild(picker);\n\n// 负责在光标处插入文字的函数\nfunction insertAtCursor(myField, myValue) {\n    var editor = myField;\n    var html = myValue;\n    editor.focus();\n\n    if (window.getSelection) {\n        var selection = window.getSelection();\n        if (selection.getRangeAt && selection.rangeCount) {\n            var range = selection.getRangeAt(0);\n            range.deleteContents();\n            var element = document.createElement('div');\n            element.innerHTML = html;\n\n            var node;\n            var lastNode;\n            var fragment = document.createDocumentFragment();\n\n            while ((node = element.firstChild)) {\n                lastNode = fragment.appendChild(node);\n            };\n\n            range.insertNode(fragment);\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            };\n        }\n\n    } else if (document.selection && document.selection.type != 'Control') {\n        editor.focus();\n        var range = document.selection.createRange();\n        range.pasteHTML(html);\n        editor.focus();\n    }\n}\n\n// 调整聊天区域和输入框区域比例的函数\noLine.onmousedown = function(ev) {\n    // 更改oLine颜色为蓝色，方便查看分界线\n    oLine.style.backgroundColor = \"#1E90FF\";\n    var iEvent = ev || event;\n    var dy = iEvent.clientY; //当你第一次单击的时候，存储y轴的坐标。//相对于浏览器窗口\n    var upperHeight = upperChild.offsetHeight;\n    var downHeight = downChild.offsetHeight;\n    document.onmousemove = function(ev) {\n        var iEvent = ev || event;\n        var diff = iEvent.clientY - dy; //移动的距离（向上滑时为负数,下滑时为正数）\n        if (100 < (upperHeight + diff) && 100 < (downHeight - diff)) {\n            //两个div的最小高度均为100px\n            upperChild.style.height = `calc(100% - ${downHeight - diff}px)`;\n            downChild.style.height = (downHeight - diff) + 'px';\n        }\n    };\n    document.onmouseup = function() {\n        // 更改oLine颜色为白色\n        oLine.style.backgroundColor = \"#fff\";\n        document.onmousedown = null;\n        document.onmousemove = null;\n    };\n    return false;\n}\n\n// 显示表情输入框\nemojiBtn.onclick = function() {\n    emojiMart.style.display = \"block\";\n    toolMusk.style.display = \"block\";\n\n    let emojiHeight = emojiMart.offsetHeight;\n    var downHeight = downChild.clientHeight;\n    var upperHeight = upperChild.clientHeight;\n\n    if (emojiHeight < upperHeight) {\n        emojiMart.style.bottom = `${downHeight + 3}px`\n        emojiMart.style.top = '';\n    } else {\n        emojiMart.style.bottom = ''\n        emojiMart.style.top = '10px';\n    }\n\n}\n\n// 全屏编辑文字\neditFullScreen.onclick = function() {\n    var downHeight = downChild.clientHeight;\n    var upperHeight = upperChild.clientHeight;\n    downChild.style.height = `100%`;\n    upperChild.style.height = \"0px\";\n    editFullScreen.style.display = \"none\";\n    exitFullScreen.style.display = \"block\";\n    oLine.style.display = \"none\";\n}\n\n// 退出全屏编辑文字\nexitFullScreen.onclick = function() {\n    // 防呆不防傻，用于避免上部聊天窗口被压到没有高度后出现异常\n    if (upperHeight != 0) {\n        downChild.style.height = `${downHeight}px`;\n        upperChild.style.height = `calc(100% - ${downHeight}px)`;\n    } else {\n        upperChild.style.height = \"calc(100% - 150px)\";\n        downChild.style.height = \"150px\";\n    }\n\n    exitFullScreen.style.display = \"none\";\n    editFullScreen.style.display = \"block\";\n    oLine.style.display = \"block\";\n}\n\n// 隐藏musk和表情输入框\ntoolMusk.onclick = function() {\n    emojiMart.style.display = \"none\";\n    toolMusk.style.display = \"none\";\n}\n\n// 将图片插入到输入框中\nfunction addImage(file) {\n    new Promise((resolve, reject) => {\n        // console.log(file);\n        // 获取file的src\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            var src = e.target.result;\n            var img = new Image();\n            img.src = src;\n\n            // *这里的方法已经转移到了css里，暂时弃用\n            // // 为了防止图片在输入框内显示过大不好编辑\n            // img.style.width = \"100px\";\n            // 将img从HEMLElement转化为字符串\n            // 例如，转化结束后为'<img src=\"\">'\n            var imgStr = img.outerHTML;\n            // 将img字符串插入到输入框中\n            insertAtCursor(chatInput, imgStr);\n        }\n        reader.readAsDataURL(file);\n    })\n}\n\n// 上传图片、文件\nfunction inputFile(settings) {\n    console.log(settings);\n    // -----------------设置最大图片大小及数量-----------------\n    if (settings.maxImageSize != undefined) {\n        var maxImageSize = settings.maxImageSize;\n    } else {\n        var maxImageSize = -1;\n    }\n\n    if (settings.maxImageNumber != undefined) {\n        var maxImageNumber = settings.maxImageNumber;\n    } else {\n        var maxImageNumber = -1;\n    }\n\n    if (settings.enable) {\n        // -----------------上传图片的按钮-----------------\n        imageBtn.onclick = function() {\n                var imageInput = document.createElement('input');\n                imageInput.type = 'file';\n                imageInput.accept = 'image/*';\n                imageInput.multiple = true;\n                imageInput.style.display = 'none';\n                imageInput.onchange = function() {\n                        // 获取输入框内图片数量\n                        // 获取文件\n                        var imgNum = chatInput.getElementsByTagName('img').length;\n                        for (var i = 0; i < this.files.length; i++) {\n                            if (maxImageNumber == -1 || imgNum < maxImageNumber) {\n                                // 如果大小超过限制，改用文件上传\n                                if ((maxImageSize == -1 || this.files[i].size <= maxImageSize)) {\n                                    imgNum++;\n                                    addImage(this.files[i]);\n                                } else {\n                                    sendFile(this.files[i]);\n                                }\n                            }\n                        }\n                    }\n                    // 触发点击事件\n                imageInput.click();\n            }\n            // -----------------上传文件的按钮-----------------\n        let sendFile = settings.sendFileFunc;\n        // 上传文件按钮\n        fileBtn.onclick = function() {\n            // 创建一个隐藏的上传文件的input，再借助点击这个input来上传文件\n            var fileInput = document.createElement('input');\n            fileInput.type = 'file';\n            fileInput.multiple = true;\n            fileInput.style.display = 'none';\n            fileInput.onchange = function() {\n                    // 获取文件\n                    for (var i = 0; i < this.files.length; i++) {\n                        var file = this.files[i];\n                        sendFile(file);\n                    }\n                }\n                // 触发点击事件\n            fileInput.click();\n        }\n\n        // -----------------拖拽上传-----------------\n        if (settings.enableDrop) {\n            // 当downChild有文件被拖入时，也调用上传文件的函数\n            downChild.ondrop = function(e) {\n                e.preventDefault();\n                // 阻止火狐浏览器默认打开文件的行为\n                e.stopPropagation();\n                downChild.style.border = \"none\";\n                // 获取被拖拽的文件并上传\n                var imgNum = chatInput.getElementsByTagName('img').length;\n                for (var i = 0; i < e.dataTransfer.files.length; i++) {\n                    var file = e.dataTransfer.files[i];\n                    // 如果是图片，直接插入到输入框中\n                    if (file.type.indexOf(\"image\") == 0) {\n                        if (maxImageNumber == -1 || imgNum < maxImageNumber) {\n                            // 如果大小超过限制，改用文件上传\n                            if ((maxImageSize == -1 || file.size <= maxImageSize)) {\n                                addImage(file);\n                                imgNum++;\n                            } else {\n                                sendFile(file);\n                            }\n                        }\n                    } else {\n                        sendFile(file);\n                    }\n                }\n            }\n\n            // 当downChild有文件被拖入时，改变downChild的边框颜色\n            downChild.ondragover = function(e) {\n                e.preventDefault();\n                downChild.style.border = \"3px solid #1E90FF\";\n            }\n\n            // 当downChild有文件被拖入后离开时，改回downChild的边框颜色\n            downChild.ondragleave = function(e) {\n                e.preventDefault();\n                downChild.style.border = \"none\";\n            }\n        }\n    } else {\n        // 如果不允许上传，那么删除事件\n        imageBtn.onclick = null;\n        fileBtn.onclick = null;\n        // 删除拖拽事件\n        downChild.ondrop = null;\n        downChild.ondragover = null;\n        downChild.ondragleave = null;\n    }\n}\n\n// TODO:可能富文本输入框的粘贴部分需要对Chrome浏览器做部分额外适配，以优化体验\n// 无格式粘贴\nchatInput.addEventListener('paste', function(e) {\n    onPaste(e);\n})\n\n//格式化粘贴文本方法\nfunction onPaste(event) {\n    // 如果粘贴的是文本，就清除格式后粘贴\n    if (event.clipboardData && event.clipboardData.getData) {\n        var text = event.clipboardData.getData('text/plain');\n        if (text) {\n            event.preventDefault();\n            document.execCommand('insertText', false, text);\n        }\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', function() {\n    chatInput.focus();\n});\n"]}